name: Tests and code quality

on:
  push:
    branches:
      - main
      - "renovate/**"
  pull_request:
    branches:
      - main

jobs:
  pre_job:
    runs-on: ubuntu-latest
    outputs:
      should_skip: ${{ steps.skip_check.outputs.should_skip }}
    steps:
      - id: skip_check
        uses: fkirc/skip-duplicate-actions@v3
        with:
          concurrent_skipping: same_content
          do_not_skip: '["pull_request", "release", "workflow_dispatch", "schedule"]'
          skip_after_successful_duplicate: true
  run-lint:
    runs-on: ubuntu-latest
    needs: pre_job
    if: needs.pre_job.outputs.should_skip != 'true'
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
        with:
          # Full git history is needed to get a proper list of changed files within `super-linter`
          fetch-depth: 0
      - name: Lint Code Base
        uses: github/super-linter@v4
        env:
          VALIDATE_ALL_CODEBASE: false
          DEFAULT_BRANCH: main
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  tests:
    name: Tests and code coverage
    runs-on: ubuntu-latest
    needs: pre_job
    if: needs.pre_job.outputs.should_skip != 'true'
    steps:
      - uses: actions/checkout@v2
      - name: Get Go version from Dockerfile
        id: get-go-version
        run: echo "::set-output name=go_version::$(grep -oP 'FROM golang:\K[\d.]+' Dockerfile)"
      - name: Set up Go
        uses: actions/setup-go@v2
        with:
          go-version: ${{ steps.get-go-version.outputs.go_version }}
      - name: Build
        run: go build -v ./...
      - name: Test
        run: go test -coverprofile cover.out -race -v ./...
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v2
        with:
          flags: unittests
          fail_ci_if_error: true
