// Code generated by moq; DO NOT EDIT.
// github.com/matryer/moq

package main

import (
	"context"
	"github.com/centrifugal/gocent/v3"
	"sync"
)

// Ensure, that CentrifugoChannelsMock does implement CentrifugoChannels.
// If this is not the case, regenerate this file with moq.
var _ CentrifugoChannels = &CentrifugoChannelsMock{}

// CentrifugoChannelsMock is a mock implementation of CentrifugoChannels.
//
//	func TestSomethingThatUsesCentrifugoChannels(t *testing.T) {
//
//		// make and configure a mocked CentrifugoChannels
//		mockedCentrifugoChannels := &CentrifugoChannelsMock{
//			ChannelsFunc: func(ctx context.Context, opts ...gocent.ChannelsOption) (gocent.ChannelsResult, error) {
//				panic("mock out the Channels method")
//			},
//		}
//
//		// use mockedCentrifugoChannels in code that requires CentrifugoChannels
//		// and then make assertions.
//
//	}
type CentrifugoChannelsMock struct {
	// ChannelsFunc mocks the Channels method.
	ChannelsFunc func(ctx context.Context, opts ...gocent.ChannelsOption) (gocent.ChannelsResult, error)

	// calls tracks calls to the methods.
	calls struct {
		// Channels holds details about calls to the Channels method.
		Channels []struct {
			// Ctx is the ctx argument value.
			Ctx context.Context
			// Opts is the opts argument value.
			Opts []gocent.ChannelsOption
		}
	}
	lockChannels sync.RWMutex
}

// Channels calls ChannelsFunc.
func (mock *CentrifugoChannelsMock) Channels(ctx context.Context, opts ...gocent.ChannelsOption) (gocent.ChannelsResult, error) {
	if mock.ChannelsFunc == nil {
		panic("CentrifugoChannelsMock.ChannelsFunc: method is nil but CentrifugoChannels.Channels was just called")
	}
	callInfo := struct {
		Ctx  context.Context
		Opts []gocent.ChannelsOption
	}{
		Ctx:  ctx,
		Opts: opts,
	}
	mock.lockChannels.Lock()
	mock.calls.Channels = append(mock.calls.Channels, callInfo)
	mock.lockChannels.Unlock()
	return mock.ChannelsFunc(ctx, opts...)
}

// ChannelsCalls gets all the calls that were made to Channels.
// Check the length with:
//
//	len(mockedCentrifugoChannels.ChannelsCalls())
func (mock *CentrifugoChannelsMock) ChannelsCalls() []struct {
	Ctx  context.Context
	Opts []gocent.ChannelsOption
} {
	var calls []struct {
		Ctx  context.Context
		Opts []gocent.ChannelsOption
	}
	mock.lockChannels.RLock()
	calls = mock.calls.Channels
	mock.lockChannels.RUnlock()
	return calls
}
